<?php
/**
 * @file
 * Code for the Imagex Contest feature.
 */

include_once 'imagex_contest.features.inc';


/**
 * Implements hook_node_view().
 */
function imagex_contest_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'contest' && $links = imagex_contest_contest_entry_links($node)) {    
    $node->content['links']['imagex_contest_add_entry'] = array(
      '#theme' => 'links__imagex_contest_add_entry',
      '#links' => $links,
      '#attributes' => array('class' => array('links', 'inline')),
    );
  }
}

/**
 * Implements of hook_form_FORM_ID_alter()
 */
function imagex_contest_form_contest_entry_node_form_alter(&$form, &$form_state, $form_id) {
  $node = $form_state['node'];
  
  // Attach contest rules/terms checkbox on new entries
  if (empty($node->nid)) {
    $contest_rules = '';
    if ($_GET['field_contest_entry_contest']) {
      if ($contest = node_load($_GET['field_contest_entry_contest'])) {
        $contest_wrapper = entity_metadata_wrapper('node', $contest);
        $contest_rules = $contest_wrapper->field_contest_rules->value(array('sanitize' => TRUE));
      }
    }
    
    // Container for rules elements
    $form['imagex_contest_rules'] = array(
      '#type' => 'container',
      '#weight' => 99,
    );
    
    // Rules is required field so should be present
    if (!empty($contest_rules)) {      
      // Display rules as markup
      $form['imagex_contest_rules']['imagex_contest_rules_view'] = array(
        '#type' => 'item',
        '#title' => t("Contest Rules"),
        '#markup' => '<div class="imagex-contest-contest-rules">' . $contest_rules['safe_value'] . '</div>',
      );
    }
    
    // Show checkbox regardless
    $form['imagex_contest_rules']['imagex_contest_rules_agree'] = array(
      '#type' => 'checkbox',
      '#title' => t("I agree that my entry complies with the rules of this contest."),
      '#required' => TRUE,
    );    
    
    $form['actions']['#weight'] = 100;
  }
}

/**
 * Implements HOOK_form_alter()
 */
function imagex_contest_form_alter(&$form, &$form_state, $form_id) {
  // Temp fix for https://drupal.org/node/1750950
  // Boolean single checkboxes have no labels
  switch ($form_id) {
    case 'views_content_views_panes_content_type_edit_form':
      $checkboxes = array(
        'field_contest_entry_open_value',
        'field_contest_voting_open_value',
      );
      if (!empty($form['exposed'])) {
        foreach ($checkboxes as $checkbox) {
          if (!empty($form['exposed']['filter-' . $checkbox])) {
            $form['exposed']['filter-' . $checkbox][$checkbox]['#options'][0] = t('No');
            $form['exposed']['filter-' . $checkbox][$checkbox]['#options'][1] = t('Yes');
          }
        }
      }
      break;
  }
}

/**
 * Implements HOOK_preprocess_node()
 */
function imagex_contest_preprocess_node(&$vars) {
  $node = $vars['node'];
  
  // Add class to contest entries if finalist or winner
  if ($node->type == 'contest_entry') {
    $node_wrapper = entity_metadata_wrapper('node', $node);
    foreach ($node_wrapper->field_contest_entry_status->getIterator() as $delta => $value) {
      $vars['classes_array'][] = 'node-contest-entry-' . trim(strtolower($value->label()));
    }
  }
}

/**
 * Determines if a contest is open to entries & global has access
 *
 * Returns links array based on access
 */
function imagex_contest_contest_entry_links($node) {
  global $user;
  $links = array();
  
  // User access
  if (!$user->uid) {
    $links['imagex_contest_add_entry_noaccess'] = array(
      'title' => t('<a href="@login">Log in</a> or <a href="@register">register</a> to submit an entry to this contest.', array('@login' => url('user/login', array('query' => drupal_get_destination())), '@register' => url('user/register', array('query' => drupal_get_destination())))),
      'html' => TRUE,
      'attributes' => array(
        'title' => t('Log in or register to submit an entry to this contest.'),
        'class' => array('imagex-contest-add-entry-anonymous'),
      ),
    );
  }
  
  // Logged but no access
  if ($user->uid && !user_access('create contest_entry content')) {
    $links['imagex_contest_add_entry_noaccess'] = array(
      'title' => t('You do not have sufficient permissions to submit an entry to this contest.'),
      'html' => TRUE,
      'attributes' => array(
        'class' => array('imagex-contest-add-entry-noaccess'),
      ),
    );
  }  
  
  // Contest is no longer open to entries
  $node_wrapper = entity_metadata_wrapper('node', $node);
  $content_open_entry = $node_wrapper->field_contest_entry_open->value();
  if (empty($content_open_entry)) {
    $links['imagex_contest_add_entry_noaccess'] = array(
      'title' => t('This contest is no longer open to entries.'),
      'html' => TRUE,
      'attributes' => array(
        'title' => t('This contest is no longer open to entries'),
        'class' => array('imagex-contest-add-entry-closed'),
      ),
    );
  }
  
  // Default, contest open and ready
  if (empty($links)) {
    $links['imagex_contest_add_entry'] = array(
      'title' => t('Submit your entry now'),
      'href' => 'node/add/contest-entry',
      'query' => array('field_contest_entry_contest' => $node->nid) + drupal_get_destination(),
      'attributes' => array(
        'title' => t('Submit your entry into this contest now!'),
        'class' => array('imagex-contest-add-entry'),
      ),
    );
  }
  
  return $links;
}